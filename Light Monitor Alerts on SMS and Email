//Email and SMS configuration

SID = ' ' 
AUTH_TOKEN = ' ' 
FROM_NUMBER = ' '
TO_NUMBER = ' '
MAILGUN_API_KEY = ' ' 
SANDBOX_URL= ' ' 
SENDER_EMAIL = 'test@' + SANDBOX_URL  # No need to modify this. The sandbox URL$
RECIPIENT_EMAIL = ' '
API_KEY = 'Enter your Own'
DEVICE_ID = 'BOLTXXXX'

//Light Monitor

import email_sms_conf
from boltiot import Email, Sms, Bolt
import json, time

minimum_limit = 750 
maximum_limit = 1000  


mybolt = Bolt(email_sms_conf.API_KEY,email_sms_conf.DEVICE_ID)
mailer = Email(email_sms_conf.MAILGUN_API_KEY, email_sms_conf.SANDBOX_URL, email_sms_conf.SENDER_EMA$
sms = Sms(email_sms_conf.SID, email_sms_conf.AUTH_TOKEN, email_sms_conf.TO_NUMBER, email_sms_conf.FR$


while True: 
    print ("Reading sensor value")
    response = mybolt.analogRead('A0') 
    data = json.loads(response) 
    print("Sensor value is: " + str(data['value']))
    try: 
        sensor_value = int(data['value'])
        if sensor_value > maximum_limit:
            print("Making request to Twilio to send a SMS")
            print("Making request to Mailgun to send an email")
            response = sms.send_sms("LIGHT STATUS : ON | INTENSITY :  " +str(sensor_value))
            response = mailer.send_email("Alert", " LIGHT STATUS : ON | INTENSITY : " +str(sensor_va$
            response_text = json.loads(response.text)
            print("Response received from Twilio is: " + str(response))
            print("Status of SMS at Twilio is :" + str(response.status))
            print("Response received from Mailgun is: " + str(response_text['message']))
        elif sensor_value < minimum_limit:
            print("Making request to Twilio to send a SMS")
            print("Making request to Mailgun to send an email")
            response = sms.send_sms("LIGHT STATUS : OFF | INTENSITY :  " +str(sensor_value))
            response = mailer.send_email("Alert", " LIGHT STATUS : OFF | INTENSITY : " +str(sensor_v$
            response_text = json.loads(response.text)
            print("Response received from Twilio is: " + str(response))
            print("Status of SMS at Twilio is :" + str(response.status))
            print("Response received from Mailgun is: " + str(response_text['message']))
        else :
            print("Making request to Twilio to send a SMS")
            print("Making request to Mailgun to send an email")
            response = sms.send_sms("LIGHT STATUS : MEDIUM | INTENSITY :  " +str(sensor_value))
            response = mailer.send_email("Alert", " LIGHT STATUS : MEDIUM | INTENSITY : " +str(senso$
            response_text = json.loads(response.text)
            print("Response received from Twilio is: " + str(response))
            print("Status of SMS at Twilio is :" + str(response.status))
            print("Response received from Mailgun is: " + str(response_text['message']))   
    except Exception as e: 
        print ("Error occured: Below are the details")
        print (e)
